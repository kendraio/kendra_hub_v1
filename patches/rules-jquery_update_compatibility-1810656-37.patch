diff --git a/ui/rules.autocomplete.js b/ui/rules.autocomplete.js
index a888fd5155a4c4817e00c8cd8f0d00c764ec5253..b79cdbe232b67d50884daa55201c503a9ac3814a 100644
--- a/ui/rules.autocomplete.js
+++ b/ui/rules.autocomplete.js
@@ -103,14 +103,17 @@ Drupal.rules = Drupal.rules || {};
       });
     });

+    // Newer versions of jQuery UI use element.data('ui-autocomplete'), older versions use element.data('autocomplete').
+    var autocompleteDataKey = typeof(this.jqObject.data('autocomplete')) === 'object' ? 'autocomplete' : 'ui-autocomplete';
+
     // Since jquery autocomplete by default strips html text by using .text()
     // we need our own _renderItem function to display html content.
-    this.jqObject.data("autocomplete")._renderItem = function(ul, item) {
+    this.jqObject.data(autocompleteDataKey)._renderItem = function(ul, item) {
       return $("<li></li>").data("item.autocomplete", item).append("<a>" + item.label + "</a>").appendTo(ul);
     };

     // Override close function
-    this.jqObject.data("autocomplete").close = function (event) {
+    this.jqObject.data(autocompleteDataKey).close = function (event) {
       var value = this.element.val();
       // If the selector is not a group, then trigger the close event an and
       // hide the menu.
@@ -119,7 +122,10 @@ Drupal.rules = Drupal.rules || {};
         if (this.menu.element.is(":visible")) {
           this._trigger("close", event);
           this.menu.element.hide();
-          this.menu.deactivate();
+          // Use deactivate for older versions of jQuery UI.
+          if (typeof(this.menu.deactivate) === 'function') {
+            this.menu.deactivate();
+          }
         }
       }
       else {
